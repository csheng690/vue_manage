{"remainingRequest":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\src\\components\\goods\\Add.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\src\\components\\goods\\Add.vue","mtime":1621274393045},{"path":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Add.vue"],"names":[],"mappingsfile":"Add.vue","sourceRoot":"src/components/goods","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑导航区 -->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\n      <el-breadcrumb-item>添加商品</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- 卡片视图 -->\n    <el-card>\n      <!-- 提示 -->\n      <el-alert title=\"添加商品信息\" type=\"info\" center show-icon :closable=\"false\"></el-alert>\n      <!-- 步骤条 -->\n      <el-steps :space=\"200\" :active=\"activeIndex - 0\" finish-status=\"success\" align-center>\n        <el-step title=\"基本信息\"></el-step>\n        <el-step title=\"商品参数\"></el-step>\n        <el-step title=\"商品属性\"></el-step>\n        <el-step title=\"商品图片\"></el-step>\n        <el-step title=\"商品内容\"></el-step>\n        <el-step title=\"完成\"></el-step>\n      </el-steps>\n\n      <!-- Tab栏 -->\n      <el-form\n        :model=\"addForm\"\n        :rules=\"addFormRules\"\n        ref=\"addFormRef\"\n        label-width=\"100px\"\n        label-position=\"top\"\n      >\n        <el-tabs\n          v-model=\"activeIndex\"\n          :tab-position=\"'left'\"\n          :before-leave=\"beforeTabLeave\"\n          @tab-click=\"tabClicked\"\n        >\n          <el-tab-pane label=\"基本信息\" name=\"0\">\n            <el-form-item label=\"商品名称\" prop=\"goods_name\">\n              <el-input v-model=\"addForm.goods_name\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"商品价格\" prop=\"price\">\n              <el-input v-model=\"addForm.goods_price\" type=\"number\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"商品重量\" prop=\"goods_weight\">\n              <el-input v-model=\"addForm.goods_weight\" type=\"number\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"商品数量\" prop=\"goods_number\">\n              <el-input v-model=\"addForm.goods_number\" type=\"number\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"商品分类\" prop=\"goods_cat\">\n              <el-cascader\n                v-model=\"addForm.goods_cat\"\n                :options=\"cateList\"\n                :props=\"cascaderProps\"\n                @change=\"handleChange\"\n              ></el-cascader>\n            </el-form-item>\n          </el-tab-pane>\n          <el-tab-pane label=\"商品参数\" name=\"1\">\n            <!-- 渲染表单的Item项 -->\n            <el-form-item\n              v-for=\"item in manyTableData\n\n            \"\n              :key=\"item.attr_id\"\n              :label=\"item.attr_name\"\n            >\n              <!-- 复选框组 -->\n              <el-checkbox-group v-model=\"item.attr_vals\">\n                <el-checkbox :label=\"cb\" v-for=\"(cb, i) in item.attr_vals\" :key=\"i\" border></el-checkbox>\n              </el-checkbox-group>\n            </el-form-item>\n          </el-tab-pane>\n          <el-tab-pane label=\"商品属性\" name=\"2\">\n            <el-form-item :label=\"item.attr_name\" v-for=\"item in onlyTableData\" :key=\"item.attr_id\">\n              <el-input v-model=\"item.attr_vals\"></el-input>\n            </el-form-item>\n          </el-tab-pane>\n          <el-tab-pane label=\"商品图片\" name=\"3\">\n            <!-- action: 图片上传的API接口地址 -->\n            <el-upload\n              :action=\"uploadURL\"\n              :on-preview=\"handlePreview\"\n              :on-remove=\"handleRemove\"\n              :headers=\"headerObj\"\n              list-type=\"picture\"\n              :on-success=\"handleSuccess\"\n            >\n              <el-button size=\"small\" type=\"primary\">点击上传</el-button>\n            </el-upload>\n          </el-tab-pane>\n          <el-tab-pane label=\"商品内容\" name=\"4\">\n            <!-- 富文本编辑器 -->\n            <quill-editor v-model=\"addForm.goods_introduce\"></quill-editor>\n            <!-- 添加商品 -->\n            <el-button type=\"primary\" class=\"btnAdd\" @click=\"addGoods\">添加商品</el-button>\n          </el-tab-pane>\n        </el-tabs>\n      </el-form>\n    </el-card>\n    <el-dialog title=\"图片预览\" :visible.sync=\"previewDialogVisible\" width=\"50%\">\n      <img :src=\"picPreviewPath\" alt=\"\" class=\"previewImg\">\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport _ from 'lodash'\nexport default {\n  data () {\n    return {\n      // 步骤条默认激活 与左侧Tab联动\n      activeIndex: '0',\n      // 添加商品的表单对象\n      addForm: {\n        goods_name: '',\n        goods_price: 0,\n        goods_weight: 0,\n        goods_number: 0,\n        // 商品所属分类数组\n        goods_cat: [],\n        // 图片的数组\n        pics: [],\n        // 商品详情描述\n        goods_introduce: '',\n        attrs: []\n      },\n      addFormRules: {\n        goods_name: [\n          { required: true, message: '请输入商品名称', trigger: 'blur' }\n        ],\n        goods_price: [\n          { required: true, message: '请输入商品价格', trigger: 'blur' }\n        ],\n        goods_weight: [\n          { required: true, message: '请输入商品重量', trigger: 'blur' }\n        ],\n        goods_number: [\n          { required: true, message: '请输入商品数量', trigger: 'blur' }\n        ],\n        goods_cat: [\n          { required: true, message: '请选择商品分类', trigger: 'blur' }\n        ]\n      },\n      // 商品列表\n      cateList: [],\n      // 级联选择器配置\n      cascaderProps: {\n        expandTrigger: 'hover',\n        label: 'cat_name',\n        value: 'cat_id',\n        children: 'children'\n      },\n      // 动态参数列表数据\n      manyTableData: [],\n      // 静态属性列表数据\n      onlyTableData: [],\n      // 图片上传地址\n      uploadURL: 'http://127.0.0.1:8888/api/private/v1/upload',\n      // 图片上传组件的请求对象\n      headerObj: {\n        Authorization: window.sessionStorage.getItem('token')\n      },\n      picPreviewPath: '',\n      // 图片预览对话框\n      previewDialogVisible: false\n    }\n  },\n  created () {\n    this.getCateList()\n  },\n  computed: {\n    getCateId () {\n      if (this.addForm.goods_cat.length === 3) {\n        return this.addForm.goods_cat[2]\n      }\n      return null\n    }\n  },\n  methods: {\n    // 获取商品分类数据列表\n    async getCateList () {\n      const { data: res } = await this.$http.get('categories')\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取商品列表失败！')\n      }\n      this.cateList = res.data\n    },\n    // 级联选择器选中项变化时出发\n    handleChange () {\n      if (this.addForm.goods_cat.length !== 3) {\n        this.addForm.goods_cat = []\n      }\n    },\n    beforeTabLeave (activeName, odlActiveName) {\n      // 未选中商品分类阻止Tab标签跳转\n      if (odlActiveName === '0' && this.addForm.goods_cat.length !== 3) {\n        this.$message.error('请先选择商品分类')\n        return false\n      }\n    },\n    // Tab标签被选中时触发\n    async tabClicked () {\n      // 访问动态参数面板\n      if (this.activeIndex === '1') {\n        const { data: res } = await this.$http.get(\n          `categories/${this.getCateId}/attributes`,\n          {\n            params: { sel: 'many' }\n          }\n        )\n        if (res.meta.status !== 200) {\n          return this.$message.error('获取动态参数列表失败！')\n        }\n        res.data.forEach(item => {\n          item.attr_vals =\n            item.attr_vals.length === 0 ? [] : item.attr_vals.split(' ')\n        })\n        this.manyTableData = res.data\n      } else if (this.activeIndex === '2') {\n        const { data: res } = await this.$http.get(\n          `categories/${this.getCateId}/attributes`,\n          {\n            params: { sel: 'only' }\n          }\n        )\n        if (res.meta.status !== 200) {\n          return this.$message.error('获取动态参数列表失败！')\n        }\n        this.onlyTableData = res.data\n      }\n    },\n    // 处理图片预览\n    handlePreview (file) {\n      this.picPreviewPath = file.response.data.url\n      this.previewDialogVisible = true\n    },\n    // 处理移除图片的操作\n    handleRemove (file) {\n      // 1.获取将要删除图片的临时路径\n      const filePath = file.response.data.tmp_path\n      // 2.从pics数组中，找到图片对应的索引值\n      const i = this.addForm.pics.findIndex(x => x.pic === filePath)\n      // 3.调用splice方法，移除图片信息\n      this.addForm.splice(i, 1)\n    },\n    // 监听图片上传成功事件\n    handleSuccess (response) {\n      // 1.拼接得到一个图片信息对象 临时路径\n      const picInfo = { pic: response.data.tmp_path }\n      // 2.将图片信息对象，push到pics数组中\n      this.addForm.pics.push(picInfo)\n    },\n    // 添加商品\n    addGoods () {\n      this.$refs.addFormRef.validate(async valid => {\n        if (!valid) return this.$message.error('请填写必要的表单项！')\n        // 发送请求前：需对提交的表单进行处理goods_cat attrs\n        // this.addForm.goods_cat = this.addForm.goods_cat.join(',')\n        // 以上写法不对：级联选择器绑定的对象goods_cat要求是数组对象\n        // 解决办法: 包：lodash 方法（深拷贝）：cloneDeep(boj)\n\n        // 将this.addForm进行深拷贝\n        const form = _.cloneDeep(this.addForm)\n        form.goods_cat = form.goods_cat.join(',')\n\n        // 处理动态参数\n        this.manyTableData.forEach(item => {\n          const newInfo = {\n            attr_id: item.attr_id,\n            attr_value: item.attr_vals.join(' ')\n          }\n          this.addForm.attrs.push(newInfo)\n        })\n        // 处理静态属性\n        this.onlyTableData.forEach(item => {\n          const newInfo = {\n            attr_id: item.attr_id,\n            attr_value: item.attr_vals\n          }\n          this.addForm.attrs.push(newInfo)\n        })\n        form.attrs = this.addForm.attrs\n        // 发起请求添加商品\n        // 商品名称必须是唯一的\n        const { data: res } = await this.$http.post('goods', form)\n        if (res.meta.status !== 201) return this.$message.error('添加商品失败！')\n        this.$message.success('添加商品成功!')\n        this.$router.push('/goods')\n      })\n    }\n  }\n}\n</script>\n\n<style Lang='less' scoped>\n.el-checkbox {\n  margin: 0 8px 0 0 !important;\n}\n.previewImg{\n  width: 100%;\n}\n.btnAdd{\n  margin-top: 15px\n}\n</style>\n"]}]}