{"remainingRequest":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\src\\components\\power\\Roles.vue?vue&type=style&index=0&id=74bf7a6a&Lang=less&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\src\\components\\power\\Roles.vue","mtime":1621269641807},{"path":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZWwtdGFnIHsKICBtYXJnaW46IDdweDsKfQouYmR0b3AgewogIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZWVlOwp9Ci5iZGJvdHRvbSB7CiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlZWU7Cn0KLnZjZW50ZXIgewogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQo="},{"version":3,"sources":["Roles.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Roles.vue","sourceRoot":"src/components/power","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑导航区 -->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>权限管理</el-breadcrumb-item>\n      <el-breadcrumb-item>角色列表</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- 卡片视图 -->\n    <el-card>\n      <!-- 添加角色按钮 -->\n      <el-row>\n        <el-col>\n          <el-button type=\"primary\" @click=\"AddRoleDialogVisible=true\">添加角色</el-button>\n        </el-col>\n      </el-row>\n      <!-- 角色列表 -->\n      <el-table :data=\"rolesList\" border stripe>\n        <!-- 展开列 -->\n        <el-table-column type=\"expand\">\n          <template slot-scope=\"scope\">\n            <el-row\n              :class=\"['bdbottom', i1 === 0 ? 'bdtop' : '', 'vcenter']\"\n              v-for=\"(item1, i1) in scope.row.children\"\n              :key=\"item1.id\"\n            >\n              <!-- 一级权限 -->\n              <el-col :span=\"5\">\n                <el-tag closable @close=\"removeRightById(scope.row, item1.id)\">{{ item1.authName}}</el-tag>\n                <i class=\"el-icon-caret-right\"></i>\n              </el-col>\n              <!-- 二级和三级 -->\n              <el-col :span=\"19\">\n                <!-- 通过for循环 渲染二级权限 -->\n                <el-row\n                  :class=\"[i2 === 0 ? '' : 'bdtop', 'vcenter']\"\n                  v-for=\"(item2, i2) in item1.children\"\n                  :key=\"item2.id\"\n                >\n                  <el-col :span=\"6 \">\n                    <el-tag\n                      type=\"success\"\n                      closable\n                      @close=\"removeRightById(scope.row, item2.id)\"\n                    >{{ item2.authName }}</el-tag>\n                    <i class=\"el-icon-caret-right\"></i>\n                  </el-col>\n                  <el-col :span=\"18\">\n                    <el-tag\n                      type=\"warning\"\n                      v-for=\"(item3) in item2.children\"\n                      :key=\"item3.id\"\n                      closable\n                      @close=\"removeRightById(scope.row, item3.id)\"\n                    >{{ item3.authName}}</el-tag>\n                  </el-col>\n                </el-row>\n              </el-col>\n            </el-row>\n          </template>\n        </el-table-column>\n        <!-- 索引列 -->\n        <el-table-column type=\"index\" label=\"#\"></el-table-column>\n        <el-table-column label=\"角色名称\" prop=\"roleName\"></el-table-column>\n        <el-table-column label=\"角色描述\" prop=\"roleDesc\"></el-table-column>\n        <el-table-column label=\"操作\" width=\"300px\">\n          <template slot-scope=\"scope\">\n            <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"showEditDialog(scope.row.id)\">编辑</el-button>\n            <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"removeRoleById(scope.row.id)\">删除</el-button>\n            <el-button\n              type=\"warning\"\n              icon=\"el-icon-setting\"\n              size=\"mini\"\n              @click=\"showSetRightDialog(scope.row)\"\n            >分配权限</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n    <!-- 分配权限 -->\n    <el-dialog\n      title=\"分配权限\"\n      :visible.sync=\"setRightDialogVisible\"\n      width=\"50%\"\n      @close=\"setRightDialogClosed\"\n    >\n      <el-tree\n        :data=\"rightsList\"\n        :props=\"treeProps\"\n        ref=\"treeRef\"\n        show-checkbox\n        node-key=\"id\"\n        default-expand-all\n        :default-checked-keys=\"defKeys\"\n      ></el-tree>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"setRightDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"allotRights\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <!-- 添加角色对话框 -->\n    <el-dialog title=\"添加角色\" :visible.sync=\"AddRoleDialogVisible\" width=\"40%\" @close=\"addRoleDialogClosed\">\n      <el-form\n        :model=\"addRoleForm\"\n        ref=\"addRoleFormRef\"\n        :rules=\"addRoleFormRules\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"角色名称\" prop=\"roleName\">\n          <el-input v-model=\"addRoleForm.roleName\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"角色描述\" prop=\"roleDesc\">\n          <el-input v-model=\"addRoleForm.roleDesc\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"AddRoleDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addRoles\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <!-- 编辑角色对话框 -->\n    <el-dialog title=\"编辑角色\" :visible.sync=\"editRoleDialogVisible\" width=\"40%\" @close=\"addRoleDialogClosed\">\n      <el-form\n        :model=\"editRoleForm\"\n        ref=\"editRoleFormRef\"\n        :rules=\"editRoleFormRules\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"角色名称\" prop=\"roleName\">\n          <el-input v-model=\"editRoleForm.roleName\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"角色描述\" prop=\"roleDesc\">\n          <el-input v-model=\"editRoleForm.roleDesc\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editRoleDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"editRoles\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      // 所有角色列表\n      rolesList: [],\n      // 分配权限框\n      setRightDialogVisible: false,\n      // 权限列表\n      rightsList: [],\n      //  树形控件的属性绑定对象\n      treeProps: {\n        label: 'authName',\n        children: 'children'\n      },\n      //   默认选中节点ID值\n      defKeys: [],\n      //   添加用户对话框\n      AddRoleDialogVisible: false,\n      // 添加角色表单\n      addRoleForm: {},\n      //   添加角色表单验证\n      addRoleFormRules: {\n        roleName: [\n          { required: true, message: '请输入角色名称', trigger: 'blur' }\n        ],\n        roleDesc: [\n          { required: true, message: '请输入角色描述', trigger: 'blur' }\n        ]\n      },\n      //   编辑角色信息\n      editRoleForm: {},\n      editRoleDialogVisible: false,\n      editRoleFormRules: {\n        roleName: [\n          { required: true, message: '请输入角色名称', trigger: 'blur' }\n        ],\n        roleDesc: [\n          { required: true, message: '请输入角色描述', trigger: 'blur' }\n        ]\n      },\n      //   当前即将分配权限的Id\n      roleId: 0\n    }\n  },\n  created () {\n    this.getRolesList()\n  },\n  methods: {\n    async getRolesList () {\n      const { data: res } = await this.$http.get('roles')\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取角色列表失败！')\n      }\n      this.rolesList = res.data\n    },\n    // 根据ID删除对应的权限\n    async removeRightById (role, rightId) {\n      // 弹框提示 删除\n      const confirmResult = await this.$confirm(\n        '此操作将永久删除该权限, 是否继续?',\n        '提示',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      ).catch(err => err)\n      // 点击确定 返回值为：confirm\n      // 点击取消 返回值为： cancel\n      if (confirmResult !== 'confirm') {\n        return this.$message.info('已取消权限删除')\n      }\n      const { data: res } = await this.$http.delete(\n        `roles/${role.id}/rights/${rightId}`\n      )\n      if (res.meta.status !== 200) {\n        return this.$message.error('删除权限失败！')\n      }\n      role.children = res.data\n      //   不建议使用\n      // this.getRolesList()\n    },\n    // 分配权限\n    async showSetRightDialog (role) {\n      this.roleId = role.id\n      // 获取角色的所有权限\n      const { data: res } = await this.$http.get('rights/tree')\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取权限数据失败！')\n      }\n      //   获取权限树\n      this.rightsList = res.data\n      //   console.log(res)\n      //   递归获取三级节点的id\n      this.getLeafkeys(role, this.defKeys)\n\n      this.setRightDialogVisible = true\n    },\n    // 通过递归 获取角色下三级权限的 id, 并保存到defKeys数组\n    getLeafkeys (node, arr) {\n      // 没有children属性，则是三级节点\n      if (!node.children) {\n        return arr.push(node.id)\n      }\n      node.children.forEach(item => this.getLeafkeys(item, arr))\n    },\n    // 权限对话框关闭事件\n    setRightDialogClosed () {\n      this.defKeys = []\n    },\n    // 添加角色对话框的关闭\n    addRoleDialogClosed () {\n      this.$refs.addRoleFormRef.resetFields()\n    },\n    // 添加角色\n    addRoles () {\n      this.$refs.addRoleFormRef.validate(async valid => {\n        if (!valid) return\n        const { data: res } = await this.$http.post('roles', this.addRoleForm)\n        if (res.meta.status !== 201) {\n          this.$message.error('添加角色失败！')\n        }\n        this.$message.success('添加角色成功！')\n        this.AddRoleDialogVisible = false\n        this.getRolesList()\n      })\n    },\n    // 删除角色\n    async removeRoleById (id) {\n      const confirmResult = await this.$confirm(\n        '此操作将永久删除该角色, 是否继续?',\n        '提示',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      ).catch(err => err)\n      if (confirmResult !== 'confirm') {\n        return this.$message.info('已取消删除')\n      }\n      const { data: res } = await this.$http.delete('roles/' + id)\n      if (res.meta.status !== 200) return this.$message.error('删除角色失败！')\n      this.$message.success('删除用户成功！')\n      this.getRolesList()\n    },\n    // 编辑角色\n    async showEditDialog (id) {\n      const { data: res } = await this.$http.get('roles/' + id)\n      if (res.meta.status !== 200) return this.$message.error('查询角色信息失败！')\n      this.editRoleForm = res.data\n      this.editRoleDialogVisible = true\n    },\n    editRoles () {\n      this.$refs.editRoleFormRef.validate(async valid => {\n        // console.log(valid)\n        // 表单预校验失败\n        if (!valid) return\n        const { data: res } = await this.$http.put(\n          'roles/' + this.editRoleForm.roleId,\n          {\n            roleName: this.editRoleForm.roleName,\n            roleDesc: this.editRoleForm.roleDesc\n          }\n        )\n        if (res.meta.status !== 200) {\n          this.$message.error('更新角色信息失败！')\n        }\n        // 隐藏编辑角色对话框\n        this.editRoleDialogVisible = false\n        this.$message.success('更新角色信息成功！')\n        this.getRolesList()\n      })\n    },\n    // 分配权限\n    async allotRights (roleId) {\n      // 获得当前选中和半选中的Id\n      const keys = [\n        ...this.$refs.treeRef.getCheckedKeys(),\n        ...this.$refs.treeRef.getHalfCheckedKeys()\n      ]\n      // join() 方法用于把数组中的所有元素放入一个字符串\n      const idStr = keys.join(',')\n      const { data: res } = await this.$http.post(`roles/${this.roleId}/rights`, { rids: idStr })\n      if (res.meta.status !== 200) { return this.$message.error('分配权限失败！') }\n      this.$message.success('分配权限成功!')\n      this.getRolesList()\n      this.setRightDialogVisible = false\n    }\n  }\n}\n</script>\n\n<style Lang=\"less\" scoped>\n.el-tag {\n  margin: 7px;\n}\n.bdtop {\n  border-top: 1px solid #eee;\n}\n.bdbottom {\n  border-bottom: 1px solid #eee;\n}\n.vcenter {\n  display: flex;\n  align-items: center;\n}\n</style>\n"]}]}