{"remainingRequest":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\src\\components\\goods\\Cate.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\src\\components\\goods\\Cate.vue","mtime":1621274393045},{"path":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Cate.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑导航区 -->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- 卡片视图 -->\n    <el-card>\n      <el-row>\n        <el-col>\n          <el-button type=\"primary\" @click=\"showAddCateDialog\">添加分类</el-button>\n        </el-col>\n      </el-row>\n      <!-- 表格 -->\n      <tree-table\n        class=\"treeTable\"\n        :data=\"cateList\"\n        :columns=\"columns\"\n        :selection-type=\"false\"\n        :expand-type=\"false\"\n        index-text=\"#\"\n        :show-row-hover=\"false\"\n        show-index\n        border\n      >\n        <!-- 是否有效 -->\n        <template slot=\"isOk\" slot-scope=\"scope\">\n          <i\n            class=\"el-icon-success\"\n            style=\"color: lightgreen\"\n            v-if=\"scope.row.cat_deleted === false\"\n          ></i>\n        </template>\n        <!-- 排序 -->\n        <template slot=\"order\" slot-scope=\"scope\">\n          <el-tag size=\"mini\" v-if=\"scope.row.cat_level === 0\">一级</el-tag>\n          <el-tag size=\"mini\" type=\"success\" v-else-if=\"scope.row.cat_level === 1\">二级</el-tag>\n          <el-tag size=\"mini\" type=\"warning\" v-else>三级</el-tag>\n        </template>\n        <!-- 操作 -->\n        <template slot=\"opt\" slot-scope=\"scope\">\n          <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"showEditCateDialog(scope.row.cat_id)\">编辑</el-button>\n          <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"removeCate(scope.row.cat_id)\">删除</el-button>\n        </template>\n      </tree-table>\n      <!-- 分页 -->\n      <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"queryInfo.pagenum\"\n        :page-sizes=\"[3, 5, 10, 15]\"\n        :page-size=\"queryInfo.pagesize\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n      ></el-pagination>\n    </el-card>\n    <!-- 添加分类的对话框 -->\n    <el-dialog title=\"添加分类\" :visible.sync=\"addCateDialogVisible\" width=\"50%\" @close=\"addCateDialogClosed\">\n      <el-form\n        :model=\"addCateForm\"\n        :rules=\"addCateFormRules\"\n        ref=\"addCateFormRef\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"分类名称：\" prop=\"cat_name\">\n          <el-input v-model=\"addCateForm.cat_name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"父级分类：\">\n          <!-- options：数据源 -->\n          <!-- props：指定配置对象 -->\n          <el-cascader\n            v-model=\"selectedKeys\"\n            :options=\"parentCateList\"\n            :props=\"cascaderProps\"\n            @change=\"parentCateChanged\"\n            clearable\n            filterable\n            style=\"width: 100%\"\n          ></el-cascader>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addCateDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addCate\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <!-- 编辑分类的对话框 -->\n    <el-dialog title=\"编辑分类\" :visible.sync=\"editCateDialogVisible\" width=\"50%\">\n      <el-form\n        :model=\"editCateForm\"\n        :rules=\"editCateFormRules\"\n        ref=\"editCateFormRef\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"分类名称：\" prop=\"cat_name\">\n          <el-input v-model=\"editCateForm.cat_name\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editCateDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"eidtCate\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      // 商品分类数据\n      cateList: [],\n      // 查询条件\n      queryInfo: {\n        type: 3,\n        pagenum: 1,\n        pagesize: 5\n      },\n      total: 0,\n      // 为table指定列的定义\n      columns: [\n        {\n          label: '分类名称',\n          prop: 'cat_name'\n        },\n        {\n          label: '是否有效',\n          // 当前列 自定义模板\n          type: 'template',\n          template: 'isOk'\n        },\n        {\n          label: '排序',\n          // 当前列 自定义模板\n          type: 'template',\n          template: 'order'\n        },\n        {\n          label: '操作',\n          // 当前列 自定义模板\n          type: 'template',\n          template: 'opt'\n        }\n      ],\n      // 添加分类\n      addCateDialogVisible: false,\n      // 添加分类对象\n      addCateForm: {\n        // 将要添加分类名称\n        cat_name: '',\n        // 分类父级id\n        cat_pid: 0,\n        // 分类等级：`0`表示一级分类；`1`表示二级分类；`2`表示三级分类\n        cat_level: 0\n      },\n      // 添加分类表单的验证规则\n      addCateFormRules: {\n        cat_name: [\n          { required: true, message: '请输入分类名称', trigger: 'blur' }\n        ]\n      },\n      // 父级分类列表\n      parentCateList: [],\n      // 指定级联选择器的配置对象\n      cascaderProps: {\n        // 配置触发选项 hover/click\n        expandTrigger: 'hover',\n        value: 'cat_id',\n        label: 'cat_name',\n        children: 'children'\n      },\n      // 选中的父级Id数组\n      selectedKeys: [],\n      // 编辑对话框 控制\n      editCateDialogVisible: false,\n      // 编辑分类表单验证\n      editCateFormRules: {\n        cat_name: [\n          { required: true, message: '请输入分类名称', trigger: 'blur' }\n        ]\n      },\n      // 编辑表单 绑定对象\n      editCateForm: ''\n    }\n  },\n  created () {\n    this.getCateList()\n  },\n  methods: {\n    // 获取商品分类\n    async getCateList () {\n      const { data: res } = await this.$http.get('categories', {\n        params: this.queryInfo\n      })\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取商品分类失败！')\n      }\n      // 给数据列表赋值\n      this.cateList = res.data.result\n      // 总数据条数\n      this.total = res.data.total\n    },\n    // 监听 pageSizeChange\n    handleSizeChange (newSize) {\n      this.queryInfo.pagesize = newSize\n      this.getCateList()\n    },\n    // 监听 pagenum改变\n    handleCurrentChange (newPage) {\n      this.queryInfo.pagenum = newPage\n      this.getCateList()\n    },\n    // 添加操作\n    showAddCateDialog () {\n      // 先获取父级分类数据\n      this.getParentCateList()\n      // 再打开对话框\n      this.addCateDialogVisible = true\n    },\n    // 获取父级分类的数据\n    async getParentCateList () {\n      const { data: res } = await this.$http.get('categories', {\n        params: { type: 2 }\n      })\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取父级分类失败！')\n      }\n      this.parentCateList = res.data\n    },\n    // 添加分类 选择项发生变化触发\n    parentCateChanged () {\n      // 如何selectKeys 数组的长度>0 说明选中父级分类\n      if (this.selectedKeys.length > 0) {\n        // 父级分类的Id\n        this.addCateForm.cat_pid = this.selectedKeys[this.selectedKeys.length - 1]\n        // 当前分类的等级\n        this.addCateForm.cat_level = this.selectedKeys.length\n        return 0\n      } else {\n        // 父级分类的Id\n        this.addCateForm.cat_pid = 0\n        // 当前分类的等级\n        this.addCateForm.cat_level = 0\n      }\n    },\n    // 添加分类\n    addCate () {\n      this.$refs.addCateFormRef.validate(async valid => {\n        if (!valid) return\n        const { data: res } = await this.$http.post('categories', this.addCateForm)\n        if (res.meta.status !== 201) {\n          return this.$message.error('添加分类失败！')\n        }\n\n        this.$message.success('添加分类成功！')\n        this.getCateList()\n        this.addCateDialogVisible = false\n      })\n    },\n    // 添加分类 重置表单\n    addCateDialogClosed () {\n      this.$refs.addCateFormRef.resetFields()\n      this.selectedKeys = []\n      this.addCateForm.cat_level = 0\n      this.addCateForm.cat_pid = 0\n    },\n    // 删除分类\n    async removeCate (id) {\n      const confirmResult = await this.$confirm('此操作将永久删除该分类, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err)\n      if (confirmResult !== 'confirm') { return this.$message.info('已取消删除！') }\n      const { data: res } = await this.$http.delete('categories/' + id)\n      if (res.meta.status !== 200) { return this.$message.error('删除商品分类失败！') }\n      this.$message.success('删除商品分类成功！')\n      this.getCateList()\n    },\n    // 显示编辑对话框\n    async showEditCateDialog (id) {\n      const { data: res } = await this.$http.get('categories/' + id)\n      if (res.meta.status !== 200) return this.$message.error('获取分类失败！')\n      this.editCateForm = res.data\n      this.editCateDialogVisible = true\n    },\n    // 编辑分类名\n    eidtCate () {\n      this.$refs.editCateFormRef.validate(async valid => {\n        if (!valid) return\n        const { data: res } = await this.$http.put('categories/' + this.editCateForm.cat_id,\n          {\n            cat_name: this.editCateForm.cat_name\n          })\n        if (res.meta.status !== 200) return this.$message.error('更新分类名失败！')\n        this.$message.success('更新分类名成功！')\n        this.getCateList()\n        this.editCateDialogVisible = false\n      })\n    }\n  }\n}\n</script>\n\n<style Lang='less' scoped>\n.treeTable {\n  margin-top: 20px;\n}\n</style>\n"],"sourceRoot":"src/components/goods"}]}