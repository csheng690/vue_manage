{"remainingRequest":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\src\\components\\goods\\Params.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\src\\components\\goods\\Params.vue","mtime":1620981545000},{"path":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\G3-Cc\\Desktop\\Manage the project\\vue_manage\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Params.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑导航区 -->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\n      <el-breadcrumb-item>参数列表</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- 卡片视图 -->\n    <el-card>\n      <!-- 警告区域 -->\n      <el-alert title=\"注意：只允许为第三级分类设置相关参数！\" type=\"warning\" show-icon :closable=\"false\"></el-alert>\n\n      <!-- 选择商品分类区域 -->\n      <el-row class=\"cat_opt\">\n        <el-col>\n          <span>选择商品分类：</span>\n          <!-- 商品分类的级联选择框 -->\n          <el-cascader\n            v-model=\"selectedCateKeys\"\n            :options=\"cateList\"\n            :props=\"cateProps\"\n            @change=\"handleChange\"\n          ></el-cascader>\n        </el-col>\n      </el-row>\n\n      <!-- tab页签区域 -->\n      <el-tabs v-model=\"activeTabsName\" @tab-click=\"handleTabsClick\">\n        <!-- 添加动态参数面板 -->\n        <el-tab-pane label=\"动态参数\" name=\"many\">\n          <el-button\n            type=\"primary\"\n            size=\"mini\"\n            :disabled=\"isBtnDisabled\"\n            @click=\"addDialogVisible = true\"\n          >添加参数</el-button>\n          <!-- 动态参数表格 -->\n          <el-table :data=\"manyTableData\" border stripe>\n            <!-- 展开列 -->\n            <el-table-column type=\"expand\">\n              <template slot-scope=\"scope\">\n                <el-tag\n                  v-for=\"(item, i) in scope.row.attr_vals\"\n                  :key=\"i\"\n                  closable\n                  @close=\"handleClose(i, scope.row)\"\n                >{{item}}</el-tag>\n                <!-- 输入Tag文本框 -->\n                <el-input\n                  class=\"input-new-tag\"\n                  v-if=\"scope.row.inputVisible\"\n                  v-model=\"scope.row.inputValue\"\n                  ref=\"saveTagInput\"\n                  size=\"small\"\n                  @keyup.enter.native=\"handleInputConfirm(scope.row)\"\n                  @blur=\"handleInputConfirm(scope.row)\"\n                ></el-input>\n                <el-button\n                  v-else\n                  class=\"button-new-tag\"\n                  size=\"small\"\n                  @click=\"showInput(scope.row)\"\n                >+ New Tag</el-button>\n              </template>\n            </el-table-column>\n            <!-- 索引列 -->\n            <el-table-column type=\"index\"></el-table-column>\n            <el-table-column label=\"参数名称\" prop=\"attr_name\"></el-table-column>\n            <el-table-column>\n              <template slot-scope=\"scope\">\n                <el-button\n                  type=\"primary\"\n                  icon=\"el-icon-edit\"\n                  size=\"mini\"\n                  @click=\"showEditDialog(scope.row.attr_id)\"\n                >编辑</el-button>\n                <el-button\n                  type=\"danger\"\n                  icon=\"el-icon-delete\"\n                  size=\"mini\"\n                  @click=\"removeParams(scope.row.attr_id)\"\n                >删除</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-tab-pane>\n        <!-- 添加静态属性面板 -->\n        <el-tab-pane label=\"静态属性\" name=\"only\">\n          <el-button\n            type=\"primary\"\n            size=\"mini\"\n            :disabled=\"isBtnDisabled\"\n            @click=\"addDialogVisible = true\"\n          >添加属性</el-button>\n          <!-- 静态属性表格 -->\n          <el-table :data=\"onlyTableData\" border stripe>\n            <!-- 展开列 -->\n            <!-- 展开列 -->\n            <el-table-column type=\"expand\">\n              <template slot-scope=\"scope\">\n                <el-tag\n                  v-for=\"(item, i) in scope.row.attr_vals\"\n                  :key=\"i\"\n                  closable\n                  @close=\"handleClose(i, scope.row)\"\n                >{{item}}</el-tag>\n                <!-- 输入Tag文本框 -->\n                <el-input\n                  class=\"input-new-tag\"\n                  v-if=\"scope.row.inputVisible\"\n                  v-model=\"scope.row.inputValue\"\n                  ref=\"saveTagInput\"\n                  size=\"small\"\n                  @keyup.enter.native=\"handleInputConfirm(scope.row)\"\n                  @blur=\"handleInputConfirm(scope.row)\"\n                ></el-input>\n                <el-button\n                  v-else\n                  class=\"button-new-tag\"\n                  size=\"small\"\n                  @click=\"showInput(scope.row)\"\n                >+ New Tag</el-button>\n              </template>\n            </el-table-column>\n            <!-- 索引列 -->\n            <el-table-column type=\"index\"></el-table-column>\n            <el-table-column label=\"属性名称\" prop=\"attr_name\"></el-table-column>\n            <el-table-column>\n              <template slot-scope=\"scope\">\n                <el-button\n                  type=\"primary\"\n                  icon=\"el-icon-edit\"\n                  size=\"mini\"\n                  @click=\"showEditDialog(scope.row.attr_id)\"\n                >编辑</el-button>\n                <el-button\n                  type=\"danger\"\n                  icon=\"el-icon-delete\"\n                  size=\"mini\"\n                  @click=\"removeParams(scope.row.attr_id)\"\n                >删除</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-tab-pane>\n      </el-tabs>\n    </el-card>\n    <!-- 添加参数对话框 -->\n    <el-dialog\n      :title=\" '添加' + getTitleText\"\n      :visible.sync=\"addDialogVisible\"\n      width=\"50%\"\n      @close=\"addDialogClosed\"\n    >\n      <el-form :model=\"addFrom\" :rules=\"addFromRules\" ref=\"addFromRef\" label-width=\"100px\">\n        <el-form-item :label=\"getTitleText\" prop=\"attr_name\">\n          <el-input v-model=\"addFrom.attr_name\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addParams\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 编辑参数对话框 -->\n    <el-dialog\n      :title=\" '修改' + getTitleText\"\n      :visible.sync=\"editDialogVisible\"\n      width=\"50%\"\n      @close=\"editDialogClosed\"\n    >\n      <el-form :model=\"editFrom\" :rules=\"editFromRules\" ref=\"editFromRef\" label-width=\"100px\">\n        <el-form-item :label=\"getTitleText\" prop=\"attr_name\">\n          <el-input v-model=\"editFrom.attr_name\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"editParams\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      // 商品分类列表\n      cateList: [],\n      //   级联选择框的配置对象\n      cateProps: {\n        expandTrigger: 'hover',\n        value: 'cat_id',\n        label: 'cat_name',\n        children: 'children'\n      },\n      //   级联选择框双向绑定对象\n      selectedCateKeys: [],\n      //   激活页签名称\n      activeTabsName: 'many',\n      //   动态参数数据\n      manyTableData: [],\n      //   静态属性数据\n      onlyTableData: [],\n      //   控制添加参数对话框的显示与隐藏\n      addDialogVisible: false,\n      //   添加表单的数据对象\n      addFrom: {\n        attr_name: ''\n      },\n      //   添加表单的验证规则\n      addFromRules: {\n        attr_name: [\n          { required: true, message: '请输入参数名称', trigger: 'blur' }\n        ]\n      },\n      //   编辑对话框\n      editDialogVisible: false,\n      //   修改表单数据对象\n      editFrom: {},\n      //   修改表单验证规则\n      editFromRules: {\n        attr_name: [\n          { required: true, message: '请输入参数名称', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created () {\n    this.getCateList()\n  },\n  computed: {\n    //   按钮需要被禁用返回true, 否则返回false\n    isBtnDisabled () {\n      if (this.selectedCateKeys.length !== 3) {\n        return true\n      }\n      return false\n    },\n    // 当前选中的三级分类Id\n    getCateId () {\n      if (this.selectedCateKeys.length === 3) {\n        return this.selectedCateKeys[2]\n      }\n      return null\n    },\n    getTitleText () {\n      if (this.activeTabsName === 'many') {\n        return '动态参数'\n      }\n      return '静态属性'\n    }\n  },\n  methods: {\n    //   获取所有的商品分类列表\n    async getCateList () {\n      const { data: res } = await this.$http.get('categories')\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取商品数据列表失败！')\n      }\n      this.cateList = res.data\n    },\n    // 级联选择框 选中变化 触发\n    handleChange () {\n      this.getParamsData()\n    },\n    // Tab页签点击事件的处理函数\n    handleTabsClick () {\n      this.getParamsData()\n    },\n    // 获取参数的列表数据\n    async getParamsData () {\n      // 只允许选择三级分类：\n      // 通过数组的长度判断\n      if (this.selectedCateKeys.length !== 3) {\n        this.selectedCateKeys = []\n        // 清空表格数据\n        this.manyTableData = []\n        this.onlyTableData = []\n        return\n      }\n      //   根据所选分类的Id,和当前面板的参数, 获取对应的参数\n      const { data: res } = await this.$http.get(\n        `categories/${this.getCateId}/attributes`,\n        {\n          params: { sel: this.activeTabsName }\n        }\n      )\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取参数列表失败！')\n      }\n\n      res.data.forEach(item => {\n        //   通过三元表达式判断attr_vals是否为空\n        item.attr_vals = item.attr_vals ? item.attr_vals.split(' ') : []\n\n        // 控制文本框的显示与隐藏\n        item.inputVisible = false\n        // 文本框的输入值\n        item.inputValue = ''\n      })\n      if (this.activeTabsName === 'many') {\n        this.manyTableData = res.data\n      } else {\n        this.onlyTableData = res.data\n      }\n    },\n    // 监听对话框的关闭事件\n    addDialogClosed () {\n      this.$refs.addFromRef.resetFields()\n    },\n    // 添加参数\n    addParams () {\n      this.$refs.addFromRef.validate(async valid => {\n        if (!valid) return\n        const { data: res } = await this.$http.post(\n          `categories/${this.getCateId}/attributes`,\n          {\n            attr_name: this.addFrom.attr_name,\n            attr_sel: this.activeTabsName\n          }\n        )\n        if (res.meta.status !== 201) {\n          return this.$message.error('添加参数失败！')\n        }\n        this.$message.success('添加参数成功！')\n        this.addDialogVisible = false\n        this.getParamsData()\n      })\n    },\n    // 显示编辑对话框\n    async showEditDialog (attrId) {\n      const { data: res } = await this.$http.get(\n        `categories/${this.getCateId}/attributes/${attrId}`,\n        {\n          params: { attr_sel: this.activeTabsName }\n        }\n      )\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取分类失败！')\n      }\n      this.editFrom = res.data\n      this.editDialogVisible = true\n    },\n    // 重置修改表单\n    editDialogClosed () {\n      this.$refs.editFromRef.resetFields()\n    },\n    // 修改参数\n    editParams () {\n      this.$refs.editFromRef.validate(async valid => {\n        if (!valid) return\n        const { data: res } = await this.$http.put(\n          `categories/${this.getCateId}/attributes/${this.editFrom.attr_id}`,\n          {\n            attr_name: this.editFrom.attr_name,\n            attr_sel: this.activeTabsName\n          }\n        )\n        if (res.meta.status !== 200) {\n          return this.$message.error('修改参数失败！')\n        }\n        this.$message.success('修改参数成功！')\n        this.getParamsData()\n        this.editDialogVisible = false\n      })\n    },\n    // 根据Id删除对应的参数项\n    async removeParams (attrId) {\n      const confirmResult = await this.$confirm(\n        '此操作将永久删除该参数, 是否继续?',\n        '提示',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      ).catch(err => err)\n      if (confirmResult !== 'confirm') {\n        return this.$message.info('已取消删除！')\n      }\n      const { data: res } = await this.$http.delete(\n        `categories/${this.getCateId}/attributes/${attrId}`\n      )\n      if (res.meta.status !== 200) {\n        return this.$message.error('删除参数失败！')\n      }\n      this.$message.success('删除参数成功！')\n      this.getParamsData()\n    },\n    // 文本框失去焦点,或者按下Enter触发\n    handleInputConfirm (row) {\n      // 输入的内容为空时，清空\n      if (row.inputValue.trim().length === 0) {\n        row.inputValue = ''\n        row.inputVisible = false\n        return\n      }\n      row.attr_vals.push(row.inputValue.trim())\n      row.inputValue = ''\n      row.inputVisible = false\n      // 提交数据库，保存修改\n      this.saveAttrVals(row)\n    },\n    // 将对attr_vals（Tag） 的操作 保存到数据库\n    async saveAttrVals (row) {\n      const { data: res } = await this.$http.put(\n        `categories/${this.getCateId}/attributes/${row.attr_id}`,\n        {\n          attr_name: row.attr_name,\n          attr_sel: row.attr_sel,\n          attr_vals: row.attr_vals.join(' ')\n        }\n      )\n      if (res.meta.status !== 200) {\n        return this.$message.error('修改参数项失败！')\n      }\n      this.$message.success('修改参数项成功！')\n    },\n    // 点击按钮显示输入框\n    showInput (row) {\n      row.inputVisible = true\n      //   让输入框自动获取焦点\n      // $nextTick方法的作用：当页面元素被重新渲染之后，才会至指定回调函数中的代码\n      this.$nextTick(_ => {\n        this.$refs.saveTagInput.$refs.input.focus()\n      })\n    },\n    // 删除对应的参数可选项\n    handleClose (i, row) {\n      row.attr_vals.splice(i, 1)\n      this.saveAttrVals(row)\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.cat_opt {\n  margin: 15px 0px;\n}\n.el-cascader {\n  width: 25%;\n}\n.el-tag {\n  margin: 8px;\n}\n.input-new-tag {\n  width: 90px;\n}\n.button-new-tag {\n  height: 32px;\n  line-height: 30px;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n</style>\n"],"sourceRoot":"src/components/goods"}]}